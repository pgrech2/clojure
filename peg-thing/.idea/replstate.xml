<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1472165612762">{:repl-history {:ide [], :local [&quot;(triangular? 5)&quot; &quot;(triangular? 6\n             )&quot; &quot;(triangular? 10)&quot; &quot;(triangular? 9)&quot; &quot;(take-while #(&gt;= n %) tri)&quot; &quot;(take-while #(&gt;= 5 %) tri)&quot; &quot;(take-while #(&gt;= 7 %) tri)&quot; &quot;(last (take 7 tri))&quot; &quot;(take 7 tri)&quot; &quot;(last (take\n        -while #(&gt;= 7 %) tri))&quot; &quot;(last (take-while #(&gt;= 7 %) tri))&quot; &quot;(= 7 (last (take-while #(&gt;= 7 %) tri)))&quot; &quot;(def n 5)&quot; &quot;(= n (last (take-while #(&gt;= n %) tri)))&quot; &quot;n&quot; &quot;(def n 3)&quot; &quot;(last (take n tri))&quot; &quot;(tri* 3)&quot; &quot;(tri*\n  )&quot; &quot;(str \&quot;hello\&quot;\n     )&quot; &quot;(tri*)&quot; &quot;(def tri (tri*))&quot; &quot;(take tri 5)&quot; &quot;(5 tri)&quot; &quot;(tri 5)&quot; &quot;(doc take)&quot; &quot;(take 10 tri)&quot; &quot;(row-tri 3)&quot; &quot;(take 5 tri)&quot; &quot;(doc take-while)&quot; &quot;(take-while #(&gt; 3 %) tri)&quot; &quot;(take-while #(&gt; 7 %) tri)&quot; &quot;(count (take-while #(&gt; 7 %) tri))&quot; &quot;(inc (count (take-while #(&gt; 7 %) tri)))&quot; &quot;(connect {} 15 1 2 4)&quot; &quot;(doc assoc-in)&quot; &quot;(doc get-in)&quot; &quot;[:cookie :monster :vocals] &quot; &quot;(get-in {} [:cookie :monster :vocals] \&quot;Finntroll\&quot;)&quot; &quot;(assoc-in {} [:cookie :monster :vocals \&quot;hello\&quot;] \&quot;Finntroll\&quot;)&quot; &quot;(assoc-in {} [:cookie :monster \&quot;there\&quot;, :vocals \&quot;hello\&quot;] \&quot;Finntroll\&quot;)&quot; &quot;(get-in {:cookie {:monster {:vocals \&quot;Finntroll\&quot;}}} [:cookie :monster])&quot; &quot;(assoc-in {} [:cookie :monster :vocals] \&quot;Finntroll\&quot;)&quot; &quot;(get-in {:cookie {:monster {:vocals \&quot;Finntroll\&quot;}}} [:cookie :monster :vocals])&quot; &quot;(get-in (assoc-in {} [:cookie :monster :vocals] \&quot;Finntroll\&quot;) [:cookie :monster :vocals])&quot; &quot;(connect-down-left {} 15 1)&quot; &quot;(connect-down-left {} 3 7)&quot; &quot;(connect-down-left {} 15 1\n                   )&quot; &quot;(connect-down-right {} 15 3)&quot; &quot;(doc conj)&quot; &quot;(? reduce)&quot; &quot;(doc reduce)&quot; &quot;a&quot; &quot;val&quot; &quot;(def my-list '(1 2 3))&quot; &quot;my-list&quot; &quot;(ns-map *ns*)&quot; &quot;(ns-publics *ns*)&quot; &quot;(ns-publics peg-thing.core)&quot; &quot;(ns-publics 'peg-thing.core)&quot; &quot;(keys (ns-publics 'peg-thing.core))&quot; &quot;(def my-board (assoc-in (new-board 5) [4 :pegged] false))&quot; &quot;my-board&quot; &quot;(valid-moves my-board 1)&quot; &quot;(valid-moves my-board 11)&quot; &quot;(valid-moves my-board 12)&quot; &quot;(doc some)&quot; &quot;(some '(1 2 true 3 4 true))&quot; &quot;(-main 5)&quot; &quot;[5]&quot; &quot;5&quot; &quot;(-main)&quot; &quot;(plrintln \&quot;hello\&quot;)&quot; &quot;(get-input 5)&quot; &quot;(println \&quot;hello\&quot;)&quot; &quot;(println \&quot;hello world\&quot;)&quot;], :remote []}}</component>
</project>